How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    identifying typo

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    During development sometimes I focus on one task and accomplished it while next time I 
should do a new one. so I develop functions which would be useful in general but not
 specifically for the new task. with History tracing I can recycle the useful function.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros: each commit reflect a logical change
    cons: lots of unnecessary commits as well as ambiguous commits

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git is design to work for coding specifically wile the rest is design for general purpose.

How can you use the commands git log and git diff to view the history of files?

    First I will use git log to locate interesting version and then use git diff to see 
differentiate 

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    to work on my project
